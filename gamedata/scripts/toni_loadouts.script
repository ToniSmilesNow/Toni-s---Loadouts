-- Leverage this to read sections from loadouts
local ini_loadouts = ini_file("items\\settings\\importer.ltx")

NewGame = itms_manager.new_game_equippment

local tbl = {}
function itms_manager.new_game_equippment()
    -- tricky, we want this to fire to enable mags compat but also we don't want this to take effect
    if not has_alife_info("loadout_handled") then
        printf("Handling loadout")
        give_info("loadout_handled")
        local to_open = nil
        db.actor:iterate_inventory(function(actor,itm)
            local sec = itm:section()
            printf("Analyzing %s", sec)
            if SYS_GetParam(0, sec, "loadout_section") then
                -- mark for release
                printf("Marked item %s", sec)
                to_open = itm
            end
        end, db.actor)
        if to_open then
            open_box(to_open)
            alife_release_id(to_open:id())
            return false
        end
    end
    NewGame()
    post_open()
    return true
end

-- open the box, accumulate post-open stuff in tbl
function open_box(itm)
    -- Determine loadout and provide the player with items using alife_create(item, db.actor)
    -- your code here
    printf("Enjoy your free pron!")
    alife_create_item("porn", db.actor)

end

-- this should handle reassignment of conditions and other custom stuff we want to do
-- arg is a map of ids to custom conds and actions
function post_open()
    -- iterate through the table, pull IDs and apply any post-creation changes (like condition)
    -- the new game func will set random conditions, we want to use custom ones


    -- autosave to override the original
	-- exec_console_cmd("save " .. user_name() .. " - autosave")
    empty_table(tbl)
    return true
end